upstream apibackend {
    server 127.0.0.1:3001;
}

# reserve 5MB under the name 'vidloads' to track uploads
upload_progress vidloads 5m;

server {
    # Port 80 is implied but with a caching server in front, you need a
    # different port.
    listen        80;
    server_name   api.kliqmobile.com;

    client_max_body_size 500M;
    client_header_timeout 15m;
    client_body_timeout 15m;
    send_timeout 15m;    

    access_log /var/log/nginx/kliqmobile.com/api-access.log;    
    error_log  /var/log/nginx/kliqmobile.com/api-error.log;

    #---- STATIC ----

    location ~ ^/shares/ {
        root /home/ubuntu/media;
    }

    location ~ ^/assets/ {
        root /home/ubuntu/media;
    }

    location ~ ^/uservids/ {
        root /home/ubuntu/media;
    }
    
    location ~ ^/userthumbs/ {
        root /home/ubuntu/media;
    }

    location ~ ^/kliqs/ {
        root /home/ubuntu/media;
    }    

    # Serve static files using Nginx thus allowing Dancer to handle more
    # dynamic content requests.
    # Huge performance boost! First you must move all your
    # static ('/public') folder to the same server as Nginx or accessible
    # from by Nginx over the network.
    location ~ ^/(images|css|javascripts)/ { 
        root /home/ubuntu/kliq-api/public;
        expires 30d;
    }

    #---- UPLOAD ---- 

    location @upcontroller {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass       http://apibackend;
    }

    location ~ ^/progress {
        # report uploads tracked in the 'vidloads' zone
        report_uploads vidloads;
    }

    location /upload {
        root /home/ubuntu/media;
        #rewrite ^ /upload.html last;
    }

    location /v1/uploads {
      if ($request_method ~ POST) {
        # Pass altered request body to this location
        upload_pass   @upcontroller;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist    
        # i.e. make sure to create /u/apps/bugle/shared/uploads_tmp/0 /u/apps/bugle/shared/uploads_tmp/1 etc.
        upload_store /home/ubuntu/media/uploads 1;

        # set permissions on the uploaded files
        upload_store_access user:rw group:rw all:r;
        # Allow uploaded files to be read only by user
        #upload_store_access user:r group:r all:r;

        # Set specified fields in request body
        # this puts the original filename, new path+filename and content type in the requests params
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field $upload_field_name.sha1 "$upload_file_sha1";
        upload_aggregate_form_field $upload_field_name.size "$upload_file_size";

        # This directive specifies any extra POST fields which should be passed along.
        upload_pass_form_field "^title$|^authenticity_token$";

        upload_cleanup 400 404 499 500-505;

        break;
      }

        # proxy to upstream server
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass       http://apibackend;

        # track uploads in the 'vidloads' zone
        # remember connections for 30s after they finished
        track_uploads vidloads 30s;
    }


    #---- DANCER ---- 

    # This is where all magic happens. Everything in this block goes
    # directly to Dancer. What's going on?
    # We set specific headers that L<Plack::Middleware::ReverseProxy>
    # expects. Using this information,
    # it overwrites certain environmental variables with the values we want.
    # When Dancer receives it,
    # it's as if Dancer is facing the intertubes.
    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass       http://apibackend;
    }
    # Note: If you add a frontend caching server, the above section will
    # have to change completely


}
